version: "3.9"

services:
  minio:
    image: minio/minio:RELEASE.2024-11-01T00-00-00Z
    container_name: minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"  # S3 API
      - "9001:9001"  # Console
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio-console:
    image: minio/console:v1.7.0
    container_name: minio-console
    depends_on:
      - minio
    environment:
      CONSOLE_MINIO_SERVER: http://minio:9000
      CONSOLE_MINIO_USER: ${MINIO_ROOT_USER}
      CONSOLE_MINIO_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9002:9090"

  mc:
    image: minio/mc:RELEASE.2024-11-01T00-00-00Z
    container_name: minio-mc
    depends_on:
      minio:
        condition: service_healthy
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BUCKET: ${MINIO_BUCKET}
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
      (mc ls local/${MINIO_BUCKET} || mc mb -p local/${MINIO_BUCKET}) &&
      echo 'MinIO bucket ready: ${MINIO_BUCKET}'
      "
    restart: "no"

  pipeline-image:
    build: .
    image: models-pipeline:latest
    container_name: pipeline-image
    env_file: .env
    volumes:
      - cache:/app/cache
      - hf_models:/app/hf_models
      - ./data:/app/data
    command: ["worker", "help"]
    # No ports; this is a job image

  # Individual task runners
  scraper:
    image: models-pipeline:latest
    env_file: .env
    depends_on:
      - pipeline-image
    volumes:
      - cache:/app/cache
      - ./data:/app/data
    command: ["worker", "scrape"]

  downloader:
    image: models-pipeline:latest
    env_file: .env
    depends_on:
      - pipeline-image
    volumes:
      - cache:/app/cache
      - hf_models:/app/hf_models
      - ./data:/app/data
    command: ["worker", "download"]

  metadata:
    image: models-pipeline:latest
    env_file: .env
    depends_on:
      - pipeline-image
    volumes:
      - cache:/app/cache
      - ./data:/app/data
    command: ["worker", "metadata"]

  sync:
    image: models-pipeline:latest
    env_file: .env
    depends_on:
      - pipeline-image
      - mc
    volumes:
      - hf_models:/app/hf_models
    command: ["worker", "sync"]

  pipeline:
    image: models-pipeline:latest
    env_file: .env
    depends_on:
      - pipeline-image
      - mc
    volumes:
      - cache:/app/cache
      - hf_models:/app/hf_models
      - ./data:/app/data
    command: ["worker", "all"]

volumes:
  minio-data:
  cache:
  hf_models:
